# OBJETOS:
criar um objeto é simples, bastar definirmos uma variável e iniciar a definição do seu valor com chaves {}. Mas e se precisarmos criar um novo objeto, com as mesmas caracgterísticas do anterior?

# CONSTRUCTOR FUNCTIONS(Função Construtora):
São responsáveis por construir novos objetos sempre que chamamos a mesma.

function Carro() {
  this.marca = 'Marca'
  this.preco = 0
}

const honda = new Carro()
honda.marca = 'Honda'
honda.preco = 4000

const fiat = new Carro()
fiat.marca = 'Fiat'
fiat.preco = 3000

# new keyword:
É responsável por criar um novo objeto baseado na função que passarmos a frente dela.

const honda = new Carro();

1 - Cria um novo objeto:
honda = {}

2 - Define o protótipo
honda.prototype = Carro.prototype

3 - Aponta a variável this para o objeto:
this = honda

4 - Executa a função, substituindo this pelo objeto:
honda.marca = 'Marca'
honda.preco = preco = 0

# DEFININDO PARÂMETRO NA FUNÇÃO CONSTRUTORA:

function Carro(marcaAtribuida, preco){
this.marca = marcaAtribuida,
this.preco = preco
}

# this keyword:
O this faz referência ao próprio objeto construído com a Constructor Function:

function Carro(marca, precoInicial) {
const taxa = 1.2;
const precoFinal = precoInicial * taxa;
this.marca = marca;
this.preco = precoFinal;
console.log(this);
}

const honda = new Carro('Honda', 2000);
