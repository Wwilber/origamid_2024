# classList: 
Retorna uma lista com as classes do elemento. Permite adicionar, remover e verificar se contem:

const menu = document.querySelector('.menu')
menu.classList.add('ativo')

console.log(menu)
console.log(menu.classList)

* menu.className // string
* menu.classList // lista de classes
* menu.classList.add('ativo')
* menu.classList.add('ativo', ' mobile') // duas classes
* menu.classList.remove('ativo')
* menu.classList.toggle('ativo') //adiciona/remove a classe
* menu.classList.contains('ativo') // true ou false
* menu.classList.replace('ativo', 'inativo')

***** attributes: Retorna um array-like com os atributos do elemento.
const animais = document.querySelector('.animais')
animais.attributes // retorna todos os atributos.
animais.attributes[0] // retorna o primeiro atribuito

getAttribute e setAttribute: Métodos que retornam ou definem de acordo com o atribuito selecionado:

const img = document.querySelector('img')

img.getAttribute('src') // valor do src
img.setAttribute('alt', 'Texto Alternativo') // muda o alt
img.hasAttribute('id') // true / false
img.removeAttribute() //true / false

*** Read Only vs Whitable: Existem propriedades que não permitem a mudança de seus valores, essas são consideradas Read Only, ou seja, apenas leitura.

const animais2 = document.querySelector('.animais')

animais2.className // string com o nome da classe
animais2.className = 'azul' // substitui completamente a string
animais.className += ' vermelho' // adiciona vermelho a string
animais.attributes = 'class="ativo"' // não funciona, read-only

****** Lembre-se que podemos modificar o valor de uma propriedade  objeto.propriedade = ''
